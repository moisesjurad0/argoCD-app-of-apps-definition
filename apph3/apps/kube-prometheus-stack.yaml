apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus # kube-prometheus-stack
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: my-project

  source:
    ### configuration to HELM Repo ###
    repoURL: https://prometheus-community.github.io/helm-charts/
    chart: kube-prometheus-stack
    targetRevision: "*" # "*" to use the latest version
    helm: # this was simple solution to values.yaml file
      # by default was this: serviceMonitorSelector:  matchLabels: release: pr-op
      # the value is the name of the ArgoCD app or namespace
      values: |
        prometheus:
          prometheusSpec:
            serviceMonitorSelectorNilUsesHelmValues: false
            serviceMonitorSelector: {}
            serviceMonitorNamespaceSelector: {}

    ### configuration to reach GIT Repo with a HELM Chart inside, within GitHub ###
    # repoURL: https://github.com/prometheus-community/helm-charts.git
    # path: charts/kube-prometheus-stack
    # targetRevision: HEAD

  destination:
    server: https://kubernetes.default.svc
    namespace: prometheus-system

  # SYNC IS NOT ENABLED BY DEFAULT (it's a security mechanism to avoid accidental deletions)
  syncPolicy:
    syncOptions:
      - CreateNamespace=true #it ensures that the namespace existes or get created
      # - ApplyOutOfSyncOnly=true
      # - Replace=true # If the Replace=true sync option is set the Argo CD will use kubectl replace or kubectl create command to apply changes.
      - ServerSideApply=true # If ServerSideApply=true sync option is set, Argo CD will use kubectl apply --server-side command to apply changes.

    automated:
      selfHeal: true #it ensures the app get exactly as defined in these files otherwise it syncs (creates what's missing)
      prune: true # and drop any external changes
